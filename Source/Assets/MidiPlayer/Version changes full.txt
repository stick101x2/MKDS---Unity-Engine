IMPORTANT Please, do this before updating:
   - Backup your project!!!
   - If you get an error when updating, remove older MidiPlayer folder from your project before updating.

V2.88 2021-04-03
New with MidiFilePlayer
	Precalculation of the real-time position with consideration of all "Tempo Change" events (tempo mapping function).
	Properties MPTK_Duration and MPTK_Position are calculated with the real time value.
	Properties MPTK_Duration and MPTK_Position are now no longer related to speed ratio (MPTK_Speed).
	API: MPTK_LastEventPlayed, MPTK_PositionFirstNote, MPTK_TickFirstNote, MPTK_SearchEventFromTime.
	Add MPTK_LoadTime = time in millisecond to load and analyse a Midi file.
New with MPTKEvent class
	Add RealTime properties: time of the event from start in milliseconds.
	Add Index properties: event index in the event's list from MPTK_ReadMidiEvents or from callback OnEventNotesMidi. 
New with MidiFileWriter2  [Pro]
	Automatic tracks creation and ending.
	Midi events sequence can be directly played with the internal MPTK midi sequencer (no temp file created). 
	New useful API available: MPTK_AddChangePreset, MPTK_AddNote, MPTK_AddChordFromLib, MPTK_AddChordFromRange... 
	Two new demos mainly based on MidiFileWriter2.  See scenes TinyMidiSequencer and TestMidiGenerator.
New with MPTKChordBuilder and MPTKRangeLib  [Pro]
	Add helpers for building chords and ranges
Others
	MidiListPlayer : Some bugs corrected [Pro]
	Updated: SoundFont GeneralUser GS v1.471 [Free]
	As usual, a lot of minor updates, enhancements, corrections ...
Thank for your comments and talks, that help me to make MPTK better.

V2.873 2021-02-20
New: create a midi event stream with the class MidiFileWriter2 and play it directly without saving to a file [Pro].
New: trigger event OnEventEndPlayMidi also when a Midi end and loop to the start. Reason=Loop
Demo TestMidiWriter: demo update for creating a midi stream and play it [Pro].

V2.872 2021-24-01
Replace Datetime.Now with the more efficient Datetime.UtcNow (thank github.com/Ideae for this proposition).
Corrected issue when a noteoff is processed in the attack phase (thank github.com/Ideae for detection and proposition).
Corrected issue with MPTK_TickCurrent. Midi events at this exact tick position was missing, so some midi events could be lost.
New synth parameter MPTK_CutOffVolume. Sample is stopped when amplitude is below this value. Increase for better performance but with degraded quality because sample are stopped earlier.
Changed default cutoff volume (MPTK_CutOffVolume) from 0.1f to 0.05f. (cab be increased in case of excessive DSP Load)
Demo TestMidiFilePlayerScripting: add how to stop playing at a specific midi tick. 
Added direct link to API helper in the inspector header of each prefab.

V2.871 2020-12-29 (Pro only)
Bug correction on "Midi Euclidean Rhythms" demo
Comments Enhancement on code source of the demo "Midi Euclidean Rhythms"
Better BPM convert done

V2.87 2020-12-29 (Pro only)
New MPTK event triggered by the audio engine. Absolutely essential if you are writing something like a sequencer or a rhythm game.
Update of the "Midi Euclidean Rhythms" demo. Mainly to check the added event but also with a lot of good function to play music.
New attributes to MPTKEvent classe (generic tag and tick from creating event)

V2.86 2020-12-02
Android: Ready to fight latency with Oboe. Integration with Unity asset Oboe for low latency on Android without code to write [Pro].
Synthesizer: Real Time modification of synth parameters available by script to change default SoundFont generator value (ADSR, LFO, Effect, ...) [Pro].
Midi Device: To avoid latency with Midi keyboard, add callback possibility for reading midi events from a device [Pro]. 
Midi File Setup: Improvements of the Midi File Setup windows.
Add filter to editor popup list (Midi file, Preset, Generator ...).
Add timestamp at creation of a MPTKEvent. Usefull for building Rhytm Game.
Prefab MidiExternalPlay: now able to load and play Midi from a byte array.
Corrected Midi Loading for error in some cases when midi tcontains a sysex.
Demo TestMidiFilePlayerScripting: add demo for method MPTK_TickCurrent to set random start playing inside the Midi file.
Demo TestMidiStream: have fun with MTPK_ModifySynthParameter to change synth behaviors [Pro].
Demo TestEuclideanRhythme: add a tap zone to trig hit drum manually. Check latency and real time synth change with MTPK_ModifySynthParameter [Pro].
Demo TestMidiKeyboard: switch to callback read midi events mode.

V2.85 2020-10-22
Midi Device: Midi output device capabilities on top of Midi reading device [Pro].
Prefab all: "Release Same Note" and "Kill By Exclusive Class" are now visibles from all prefab editor.
Prefab MidiStreamPlayer:  "Kill By Exclusive Class" set to false by default.
Demo EuclideanRhythme: Add Hit Volume + Minor design change [Pro].
Midi File Writer: new class, add high level set of functions [Pro].
Prefab MidiExternalPlayer: add better control on Midi loading error [Pro].
Issue corrected: with drum kit, in some case, hit was kill too soon, corrected!
Add new demo: read and write Midi messages with a connected device (synthesizer, keyboard, light console ...) [Pro].
Corrected MPTK_LoadLiveSF path(thx Mike!) [Pro]

V2.841 2020-09-14
Midi Setup and SoundFont Setup Windows: design change to be compliant with recent versions of Unity.
Midi Setup Windows: Add function to load all Midis from a folder.

V2.84 2020-09-09
Midi Player: Add functions to facilitate integration with Bolt [Pro].
Midi Player: Add functions able to force preset by channel regardless Midi Change Preset message from the Midi.
Midi Player: Remove wait time when switching between Midi. Now, can switch between Midi in an instant. 
Midi Player: Start and Stop playing gradually (ramp-up) [Pro]. 
Midi Player: Call MPTK_Stop when MidiFilePlayer is destroyed (more secure than only OnApplicationQuit). 
Midi Channel: Consistency, now all Midi channels number are in the range 0 to 15 (so, drum is on channel 9).
Midi Player: now play with Time.timeScale = 0.
Prefab MidiListPlayer: Inspector duration format saved [Pro].
Prefab MidiExternalPlayer: Better error management [Pro].
Demo TestMidiStream: Better demonstration for the Chord and Scales generators [Pro].
Demo TestMidiFilePlayerScripting: Change instrument/preset, disable/enable channel on fly.
Demo TestMidiPlayList: Add new functions and some corrections [Pro].
Demo EuclideanRhythme: Add Mute and Solo filter + Minor design change [Pro].
Demo TestExternalMidiPlay: Minor design change and add Midi Online Roulette!!! [Pro].

V2.83 2020-06-27
Add Spatialization by channel/instrument [Pro]
Add new Demo for spatialization by channel/instrument [Pro].
Add New API and inspector attributes for ReleaseSameNote and KillByExclusiveClass modifier.
Change MPTK_PauseOnDistance remplaced by MPTK_Spatialize.

V2.82 2020-05-15
Add Spatialization capabilities. Microsoft HRTF Spatializer and Oculus Spatializer tested.
Add an optionnal delay before playing a note or a chord (default is 0), humanizing and playing arpeggio is now possible.
Add API to define volume by midi channel.  
Add integration with Adventure Creator - [Pro]
Add integration with PlayerMaker - [Pro]
Add capabilities to build Range and Chord (usefull for algo music) - [Pro]
Add direct links to documentation in Prefab Inspector.
Performance: replace DateTime.Now (thank Peter!).
Performance: new rule in case of DSP overload: try to stop one older voice.
Issue corrected: buffering voices was disabled, possible performance issue.
Issue corrected: remove init synth when a Midi is already playing.
Issue corrected: trigger a Midi Pause just after a Midi Play create weird sounds when unpause.
Issue corrected: missing 13 pages of documentation for MidiSynth class!!!
Demo EuclideanRhythm: 3D animation + Humanization parameters.
Demo TestMidiStream: add chord builder tests.
Demo TestMidiFilePlayerMulti: take in account spatialization.
Demo TestSpatialization: new demo.

V2.81 2020-04-11
Update text and url link in the store description (mainly for integration with other assets).

V2.8 2020-04-03
Add fluidsynth effects [Pro]
Add Unity effects [Pro]
Add integration with Cinematic Sequencer - Slate [Pro]
Disable iOS synth change
Remove debug flag set in 2.71 ;-)
Correct bug on Pause midi with delay

V2.71 2020-03-13
Corrected lost of midi events at Startup in some cases.
Added the MPTK Events "OnEventStartPlayMidi" when Midi is looped.
Improved management of filter midi event in Midi File Setup Windows.
Support from Unity versions 2017.4 Long Term Support.

V2.7 2020-02-14
Added loading soundfont on the fly from local device or from the web [PRO].
Rewrited Midi Sequencer. Now played in a separate thread for more accuracy, better performance, change tempo and speed on fly.
Added function "Start playing from the first note".
Added "Pause when focus loss". Essential for smartphone!
Added new attributes to evaluate accuracy and performance for Midi Playing and SoundFont Synthesizer.
Replaced deprecated WWW method with UnityWebRequest for MidiExternalPlay prefab [PRO].
Changed MPTK_Duration. Now takes into account the change of tempo inside the Midi. 
Added MPTK_DurationMS. Give duration in milliseconds.
Removed MPTK_RealDuration. Use MPTK_Duration in place.
Created a Android (APK) demo available on demand.
Created a Windows demo available on demand.
Corrected timing accuracy with MacOS.
Corrected bad sound when changing tempo, position, speed when playing

V2.65 2019-12-15
Update the "Midi File Setup" window : detailed midi file analyzer, new design of the page, ....
Add Pitch change midi event and update demo TestMidiStream.
Change default parameters for MidiInReader prefab to Core player [PRO].
Now reading Marker Midi metaevent
Corrected an issue with the Sustain control which can generate CPU overload and cracking noise.
Corrected refresh selected SoundFont from "SoundFont Setup" window [PRO].

V2.6 2019-11-26
Add Midi input functions (Windows and MacOS only) [PRO].
New Prefab MidiInReader and API to read a Midi keyboard (Windows and MacOS only) [PRO].
Add possibility to change Unity Audio buffer size and synth rate for again better tempo accuracy, better sound, low latency.
Add looping functions inside a Midi file with MidiListPlayer [PRO].
Full rewrite of the MidiListPlayer Inspector [PRO].
Improvement of MidiListPlayer API  [PRO].
Now can keep only drum bank from a SoundFont (example of use: game based on drum) [PRO].
New demo based on Euclidean Rhythm (rhythm box) [PRO].
New demo based on MidiInReader [PRO].
Added chm format for API documentation.
Corrected: Move the OnEventStartPlayMidi closer to the start of the midi processing 
Corrected: MPTK_Load(string midiname) with Android.
Corrected: demonstration CatchMusic

V2.5 2019-10-26
New Midi Synth based on the very good fluidsynth project.
Follows the Full SoundFont and Midi norms.
Great improvement in the tempo accuracy.
Now able to process hundred voices in parallel.
Add processing of meta event Lyrics for displaying in the inspector.
Demo TestMidiFilePlayerScripting: Add processing of meta event Lyrics.

V2.05 2019-05-01
Add Enable/Disable channels methods to the Midi synth: enable/disable with MPTK_ChannelEnableSet. 
Add Preset and Bank change by script with MPTK_ChannelPresetChange
Add channel information with MPTK_ChannelEnableGet, MPTK_ChannelPresetGetIndex, MPTK_ChannelBankGetIndex, MPTK_ChannelPresetGetName, MPTK_ChannelCount
Add ToString() method to MPTKEvent class.
Add MPTK_UnPause method to MidiFilePlayer and MidiListPlayer prefabs.
Add MPTK_RealDuration calculated according with tempo change found in the midi - Experimental!
Add Track index to MPTKEvent when reading from midi file.
Add Track count properties to class MidiLoad.
Add crossfade capabilities between two Midi files with MidiListPlayer (PRO only).
Corrected processing of midi position in MidiFilePlayer Inspector which causes in some cases a nasty sound at the end of the midi.
Corrected MidiExternalPlayer "Play At Startup" attribute that was not processed.
Corrected the reading of the soundfont wave attribute "pitch correction" which could generate wrong sounds in seldom cases.
Corrected Midi file order when adding a new Midi file.
Demo TestMidiPlayer: Remove reset Speed and Transpose to default when a new midi file is played.

V2.04 2019-05-01
Calculate Midi duration after loading a Midi
Corrected calculated Duration which was wrong in some cases
Class MidiLoad: Add MPTK_InitialTempo attribute
Prefab MidiListPlayer: Add MPTK_Load() method
Add two new reasons for stop midi: next and previous
Demo TestMidiFilePlayerScripting: Add display of Midi information
Demo TestMidiFileLoad: Add display of attributes
Demo TestMidiListPlayer: Add play previous button and events trigger by script. 

V2.03 2019-04-15
New demonstration for using MidiLoad class. See scene TestMidiFileLoad.
Improved processing time and regularity of Midi event.
Corrected "Keep Midi Note Off" attribute 

V2.02 2019-03-17
Defined default midi tempo to 120 rather 80.
Corrected “Play At Startup” attribute which did not worked well.
Published TestMidiListPlayer.cs for demonstration of use.
New design for TestMidiFilePlayerMulti demo dedicated to a great Musician.
Corrected attributes not saved on Custom Inspector 

V2.01 2019-03-02
Corrected bad loop wave attributes.

V2.00 2019-03-02
New Midi Synth based on the very good fluidsynth project.
New class MidiLoad. Useful to load and process all the Midi events from a Midi.  
Added Karaoke Capabilities.
New SoundFont format: time to load and size divided by 20 and more compliant respect of generator, modulator, envelope …
Added Real Time modulator (Control Change Event).
Added Effect processing in relation with the SoundFont: low pass filter, reverb, chorus. 
Enhancement of the SoundFont import window: select bank to keep or remove.
Possibility to keep all banks from the SoundFont and change bank with a Control Change event
Better coherence of the MPTK API. New class MPTKEvent to process all kind of Midi Event.
Access to the ticks information to manage an accurate position in the Midi from the inspector and from the API.
Added new event: OnEventSynthAwake , OnEventSynthStarted
Use of the genious ‘More Effective Coroutines’ from Trinary Software to a better Coroutines management.
And a lot of improvements!

V1.96 2018-12-15 
Corrected issue with the Compifont SoundFont which includes characters not authorized in XML

V1.95 2018-11-17 
Corrected bad sample Loop attributes in case SampleModes generator is defined in the SoundFont global zone.

V1.94 2018-11-01 
Added load and play midi from an external source: web or desktop [PRO]

V1.93 2018-10-15
Corrected path error on SoundFont when moving the project folder.

V1.92 2018-10-06
Added Demonstration Scene to access each demonstration scene.
Removed Attenuation effect – will be push to a future version.
API Changes:
Renamed class MidiFileWriter to MPTK_MidiFileWriter [PRO]
Renamed class MidiListPlayer to MPTK_MidiListPlayer [PRO]

V1.91 2018-09-24
Added to TestMidiWriter an very light sequencer to show how to create a Midi file [Pro]
Added to TestMidiStreamSimple more control to show how API can be used
Corrected Instruments not working (mainly with drumkit)

V1.9 2018-09-10
Added new MidiListPlayer GameObject able to lead Midi play list [PRO]
Added new class to write Midi file from MPTK
Added capacity of playing multiple waves for one note when SoundFont contains overlapped zone
Added processing of the Panoramic SoundFont parameter when playing waves
Added processing of the Attenuation SoundFont parameter when playing waves
Added flag in Midi Player Global Inspector to enable or disable multiple playing [PRO]
Added flag in Midi Player Global Inspector to enable or disable Panoramic [PRO]
Added ReleaseTime change with MidiStreamPlayer Inspector
Added management of Midi Controller Expression and Pan
Redesign of Midi Player Global Inspector. Now SoundFont can be changed at run time and edit time [PRO]
Redesign of Midi Information in MidiFilePlayer Inspector
Redesign of Midi paramerters in MidiFilePlayer Inspector: quantization, change temp, change pan, noteoff, log events
Added keyboard shortcut to Midi and SoundFont setup.
Added a contextual menu item on Hierarchy to add MidiFilePlayer and MidiStreamPlayer GameObject.
Corrected extraction of looped wave [PRO]
Corrected “Soundfont setup” bank selection [PRO]
API Changes:
Created a new class MidiFileWriter
Added MPTK_KeepNoteOff in class MidiFilePlayer 
Added MPTK_EnablePanChange in class MidiFilePlayer 
Changed in class MidiFilePlayer MPTK__IsPaused to MPTK_IsPaused 

V1.8 - 2018-07-20
Added management of the Stop note for midi stream
Added “Direct send to player” parameter in MidiFilePlayer Inspector
Added management of Midi MetaEvent
Added Midi Info in MidiFilePlayer Inspector (textual information from Midi file)
A more friendly experience for  SoundFont Setup Windows.
Correct Help & Contact box with the right link to Pro version and Help site.
Added IsSharp properties for class  HelperNoteLabel.
Corrected demo TestMidiFilePlayerMulti when original Midi file has been modified.
Checked with Unity version 2018.2
API Changes:
Added in class MidiFilePlayer MPTK_DirectSendToPlayer

V1.7 - 2018-07-01
Added Play and Stop a note with the MidiStreamPlayer component
New demo « Catch Music », could become a game ;-)
Corrected some defect and bad url
Added a Readme asset in Project
API Changes:
New API for MPTKNote class
New API for MidiPlayer class

V1.6 - 2018-06-15
Added ReleaseTime change with MidiFilePlayer Inspector
Added Display Midi info in inspector
Changed Soundfonts On Fly from Inspector [PRO]
Corrected Speed change with MidiFilePlayer Inspector

V1.5 - 2018-06-01
First release published on the store